apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: disco-example
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 4
  selector:
    matchLabels:
      app: minio
      controller: disco-example
  serviceName: disco-example
  template:
    metadata:
      labels:
        app: minio
        controller: disco-example
      annotations:
        disco.min.io: '{.metadata.name}.{.metadata.labels.controller}.minio.local'
    spec:
      containers:
        - args:
            - server
            - http://disco-example-{0...3}.disco-example.minio.local/data{1...4}
          env:
            - name: MINIO_ACCESS_KEY
              value: minio
            - name: MINIO_SECRET_KEY
              value: minio123
          image: minio/minio:RELEASE.2020-06-22T03-12-50Z
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /minio/health/live
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: minio
          ports:
            - containerPort: 9000
              name: minio-port
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /data1
              name: data1
            - mountPath: /data2
              name: data2
            - mountPath: /data3
              name: data3
            - mountPath: /data4
              name: data4
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: data1
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: data2
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: data3
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: data4
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
